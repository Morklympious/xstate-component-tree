// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`xstate-component-tree should pass context and event params to .load methods 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": Object {
        "ctx": "context",
        "event": Object {
          "type": "xstate.init",
        },
      },
    },
  ],
}
`;

exports[`xstate-component-tree should rebuild on machine transition 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "one",
      },
    ],
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "two",
      },
    ],
  },
]
`;

exports[`xstate-component-tree should rebuild on nested invoked state machine transitions 1`] = `Object {}`;

exports[`xstate-component-tree should return a tree of components 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "component": "two",
        },
      ],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree should support arbitrary ids 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "component": "two",
        },
      ],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree should support async .load methods 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree should support holes 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "component": "three",
        },
      ],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree should support invoked state machines 1`] = `Object {}`;

exports[`xstate-component-tree should support nested async .load methods 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "component": "two",
        },
      ],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree should support nested parallel states 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "two",
    },
    Object {
      "children": Array [],
      "component": "three",
    },
  ],
}
`;

exports[`xstate-component-tree should support parallel states 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "one",
    },
    Object {
      "children": Array [],
      "component": "two",
    },
  ],
}
`;

exports[`xstate-component-tree should support sync .load methods 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree shouldn't rebuild on events without changes 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "one",
    },
  ],
}
`;

exports[`xstate-component-tree shouldn't trigger the callback if another change occurs before the tree is built 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [],
      "component": "two",
    },
  ],
}
`;
