// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`xstate-component-tree invoked child machines should be supported 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "one",
      },
    ],
    "id": "(machine)",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "child",
      },
    ],
    "id": "child",
  },
]
`;

exports[`xstate-component-tree invoked child machines should rebuild on nested invoked machine transitions 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ -19,11 +19,11 @@
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
-         "component": "grandchild1",
+         "component": "grandchild2",
        },
      ],
      "id": "grandchild",
    },
  ]
`;

exports[`xstate-component-tree invoked child machines should rebuild on transitions 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ -10,11 +10,11 @@
    },
    Object {
      "children": Array [
        Object {
          "children": Array [],
-         "component": "child1",
+         "component": "child2",
        },
      ],
      "id": "child",
    },
  ]
`;

exports[`xstate-component-tree invoked child machines should remove data once the invoke is halted 1`] = `
Snapshot Diff:
- First value
+ Second value

@@ -6,15 +6,6 @@
          "component": "one",
        },
      ],
      "id": "(machine)",
    },
-   Object {
-     "children": Array [
-       Object {
-         "children": Array [],
-         "component": "child",
-       },
-     ],
-     "id": "child",
-   },
  ]
`;

exports[`xstate-component-tree invoked child machines should support nested invoked machines 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "one",
      },
    ],
    "id": "(machine)",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "child",
      },
    ],
    "id": "child",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "component": "grandchild",
      },
    ],
    "id": "grandchild",
  },
]
`;
